syntax = "proto3";

package datacore.adapter;

import "google/protobuf/timestamp.proto";
import "Types.proto";

option csharp_namespace = "DataCore.Adapter.Grpc";


service EventsService {
    // Push 
    rpc CreateEventPushChannel(CreateEventPushChannelRequest) returns (stream EventMessage);
    rpc CreateEventTopicPushChannel(stream CreateEventTopicPushChannelRequest) returns (stream EventMessage);

    // Polling
    rpc GetEventMessagesForTimeRange(GetEventMessagesForTimeRangeRequest) returns (stream EventMessage);
    rpc GetEventMessagesUsingCursorPosition(GetEventMessagesUsingCursorPositionRequest) returns (stream EventMessageWithCursorPosition);

    // Event message write
    rpc WriteEventMessages(stream WriteEventMessageRequest) returns (stream WriteEventMessageResult);
}


message CreateEventPushChannelRequest {
    string adapter_id = 1;
    EventSubscriptionType subscription_type = 2;
    map<string,string> properties = 3;
}


message CreateEventTopicPushChannelRequest {
    oneof operation {
        CreateEventTopicPushChannelMessage create = 1;
        UpdateEventTopicPushChannelMessage update = 2;
    }
}


message CreateEventTopicPushChannelMessage {
    string adapter_id = 1;
    EventSubscriptionType subscription_type = 2;
    repeated string topics = 3;
    map<string,string> properties = 4;
}


message UpdateEventTopicPushChannelMessage {
    SubscriptionUpdateAction action = 1;
    repeated string topics = 2;
}


message GetEventMessagesForTimeRangeRequest {
    string adapter_id = 1;
    EventReadDirection direction = 2;
    google.protobuf.Timestamp utc_start_time = 4;
    google.protobuf.Timestamp utc_end_time = 5;
    map<string,string> properties = 6;
    int32 page_size = 7;
    int32 page = 8;
    repeated string topics = 9;
}


message GetEventMessagesUsingCursorPositionRequest {
    string adapter_id = 1;
    EventReadDirection direction = 2;
    string cursor_position = 4;
    map<string,string> properties = 5;
    int32 page_size = 6;
    string topic = 7;
}


// Write tag values
message WriteEventMessageRequest {
    oneof operation {
        WriteEventMessageInitMessage init = 1;
        WriteEventMessageItem write = 2;
    }
}


message WriteEventMessageInitMessage {
    string adapter_id = 1;
    map<string,string> properties = 2;
}
