syntax = "proto3";

package datacore.adapter;

import "google/protobuf/timestamp.proto";
import "Types.proto";

option csharp_namespace = "DataCore.Adapter.Grpc";


service EventsService {
    // Push 
    rpc CreateEventPushChannel(CreateEventPushChannelRequest) returns (stream EventMessage);
    
    // Polling
    rpc GetEventMessagesForTimeRange(GetEventMessagesForTimeRangeRequest) returns (stream EventMessage);
    rpc GetEventMessagesUsingCursorPosition(GetEventMessagesUsingCursorPositionRequest) returns (stream EventMessageWithCursorPosition);

    // Event message write
    rpc WriteEventMessages(stream WriteEventMessageRequest) returns (stream WriteEventMessageResult);
}


message CreateEventPushChannelRequest {
    string adapter_id = 1;
    EventSubscriptionType subscription_type = 2;
}


message GetEventMessagesForTimeRangeRequest {
    string adapter_id = 1;
    EventReadDirection direction = 2;
    int32 message_count = 3;
    google.protobuf.Timestamp utc_start_time = 4;
    google.protobuf.Timestamp utc_end_time = 5;
    map<string,string> properties = 6;
}


message GetEventMessagesUsingCursorPositionRequest {
    string adapter_id = 1;
    EventReadDirection direction = 2;
    int32 message_count = 3;
    string cursor_position = 4;
    map<string,string> properties = 5;
}


message EventMessage {
    string id = 1;
    google.protobuf.Timestamp utc_event_time = 2;
    EventPriority priority = 3;
    string category = 4;
    string message = 5;
    repeated AdapterProperty properties = 6;
}


message EventMessageWithCursorPosition {
    string cursor_position = 1;
    EventMessage event_message = 2;
}


enum EventSubscriptionType {
    EVENT_SUBSCRIPTION_TYPE_ACTIVE = 0;
    EVENT_SUBSCRIPTION_TYPE_PASSIVE = 2;
}


enum EventPriority {
    EVENT_PRIORITY_UNKNOWN = 0;
    EVENT_PRIORITY_LOW = 1;
    EVENT_PRIORITY_MEDIUM = 2;
    EVENT_PRIORITY_HIGH = 3;
    EVENT_PRIORITY_CRITICAL = 4;
}


enum EventReadDirection {
    EVENT_READ_DIRECTION_FORWARDS = 0;
    EVENT_READ_DIRECTION_BACKWARDS = 1;
}


message WriteEventMessageRequest {
    string correlation_id = 1;
    string adapter_id = 2;
    EventMessage message = 3;
}


message WriteEventMessageResult {
    string correlation_id = 1;
    string adapter_id = 2;
    WriteOperationStatus write_status = 3;
    string notes = 4;
    repeated AdapterProperty properties = 5;
}