#nullable enable
const Microsoft.Extensions.DependencyInjection.SignalRConfigurationExtensions.HubRoute = "/signalr/app-store-connect/v2.0" -> string!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.AdapterAccessor.get -> DataCore.Adapter.IAdapterAccessor!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.BackgroundTaskService.get -> IntelligentPlant.BackgroundTasks.IBackgroundTaskService!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.BrowseAssetModelNodes(string! adapterId, DataCore.Adapter.AssetModel.BrowseAssetModelNodesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.AssetModel.AssetModelNode!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.CheckAdapterHealth(string! adapterId) -> System.Threading.Tasks.Task<DataCore.Adapter.Diagnostics.HealthCheckResult>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.CreateAdapterHealthChannel(string! adapterId, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Diagnostics.HealthCheckResult>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.CreateAnnotation(string! adapterId, DataCore.Adapter.RealTimeData.CreateAnnotationRequest! request) -> System.Threading.Tasks.Task<DataCore.Adapter.RealTimeData.WriteTagValueAnnotationResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.CreateConfigurationChangesChannel(string! adapterId, DataCore.Adapter.Diagnostics.ConfigurationChangesSubscriptionRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Diagnostics.ConfigurationChange!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.CreateEventMessageChannel(string! adapterId, DataCore.Adapter.Events.CreateEventMessageSubscriptionRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Events.EventMessage!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.CreateEventMessageTopicChannel(string! adapterId, DataCore.Adapter.Events.CreateEventMessageTopicSubscriptionRequest! request, System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Events.EventMessageSubscriptionUpdate!>! channel, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Events.EventMessage!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.CreateSnapshotTagValueChannel(string! adapterId, DataCore.Adapter.RealTimeData.CreateSnapshotTagValueSubscriptionRequest! request, System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.TagValueSubscriptionUpdate!>! channel, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.TagValueQueryResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.CreateTag(string! adapterId, DataCore.Adapter.Tags.CreateTagRequest! request) -> System.Threading.Tasks.Task<DataCore.Adapter.Tags.TagDefinition!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.DeleteAnnotation(string! adapterId, DataCore.Adapter.RealTimeData.DeleteAnnotationRequest! request) -> System.Threading.Tasks.Task<DataCore.Adapter.RealTimeData.WriteTagValueAnnotationResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.DeleteTag(string! adapterId, DataCore.Adapter.Tags.DeleteTagRequest! request) -> System.Threading.Tasks.Task<bool>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.FindAdapters(DataCore.Adapter.Common.FindAdaptersRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Common.AdapterDescriptor!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.FindAssetModelNodes(string! adapterId, DataCore.Adapter.AssetModel.FindAssetModelNodesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.AssetModel.AssetModelNode!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.FindTags(string! adapterId, DataCore.Adapter.Tags.FindTagsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Tags.TagDefinition!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetAdapter(string! adapterId) -> System.Threading.Tasks.Task<DataCore.Adapter.Common.AdapterDescriptorExtended!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetAssetModelNodes(string! adapterId, DataCore.Adapter.AssetModel.GetAssetModelNodesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.AssetModel.AssetModelNode!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetCustomFunction(string! adapterId, DataCore.Adapter.Extensions.GetCustomFunctionRequest! request) -> System.Threading.Tasks.Task<DataCore.Adapter.Extensions.CustomFunctionDescriptorExtended?>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetCustomFunctions(string! adapterId, DataCore.Adapter.Extensions.GetCustomFunctionsRequest! request) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<DataCore.Adapter.Extensions.CustomFunctionDescriptor!>!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetDescriptor(string! adapterId, System.Uri! featureUri) -> System.Threading.Tasks.Task<DataCore.Adapter.Common.FeatureDescriptor?>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetExtensionOperations(string! adapterId, System.Uri! featureUri) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<DataCore.Adapter.Extensions.ExtensionFeatureOperationDescriptor!>!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetHostInfo() -> DataCore.Adapter.Common.HostInfo!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetSupportedDataFunctions(string! adapterId, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.DataFunctionDescriptor!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetSupportedDataFunctionsWithRequest(string! adapterId, DataCore.Adapter.RealTimeData.GetSupportedDataFunctionsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.DataFunctionDescriptor!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetTagProperties(string! adapterId, DataCore.Adapter.Tags.GetTagPropertiesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Common.AdapterProperty!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetTags(string! adapterId, DataCore.Adapter.Tags.GetTagsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Tags.TagDefinition!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.GetTagSchema(string! adapterId, DataCore.Adapter.Tags.GetTagSchemaRequest! request) -> System.Threading.Tasks.Task<System.Text.Json.JsonElement>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.HostInfo.get -> DataCore.Adapter.Common.HostInfo!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.InvokeCustomFunction(string! adapterId, DataCore.Adapter.Extensions.CustomFunctionInvocationRequest! request) -> System.Threading.Tasks.Task<DataCore.Adapter.Extensions.CustomFunctionInvocationResponse!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.InvokeDuplexStreamingExtension(string! adapterId, DataCore.Adapter.Extensions.DuplexStreamInvocationRequest! request, System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Extensions.InvocationStreamItem!>! channel, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Extensions.InvocationResponse!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.InvokeExtension(string! adapterId, DataCore.Adapter.Extensions.InvocationRequest! request) -> System.Threading.Tasks.Task<DataCore.Adapter.Extensions.InvocationResponse!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.InvokeStreamingExtension(string! adapterId, DataCore.Adapter.Extensions.InvocationRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Extensions.InvocationResponse!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.ReadAnnotation(string! adapterId, DataCore.Adapter.RealTimeData.ReadAnnotationRequest! request) -> System.Threading.Tasks.Task<DataCore.Adapter.RealTimeData.TagValueAnnotationExtended?>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.ReadAnnotations(string! adapterId, DataCore.Adapter.RealTimeData.ReadAnnotationsRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.TagValueAnnotationQueryResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.ReadEventMessagesForTimeRange(string! adapterId, DataCore.Adapter.Events.ReadEventMessagesForTimeRangeRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Events.EventMessage!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.ReadEventMessagesUsingCursor(string! adapterId, DataCore.Adapter.Events.ReadEventMessagesUsingCursorRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Events.EventMessageWithCursorPosition!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.ReadPlotTagValues(string! adapterId, DataCore.Adapter.RealTimeData.ReadPlotTagValuesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.TagValueQueryResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.ReadProcessedTagValues(string! adapterId, DataCore.Adapter.RealTimeData.ReadProcessedTagValuesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.ProcessedTagValueQueryResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.ReadRawTagValues(string! adapterId, DataCore.Adapter.RealTimeData.ReadRawTagValuesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.TagValueQueryResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.ReadSnapshotTagValues(string! adapterId, DataCore.Adapter.RealTimeData.ReadSnapshotTagValuesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.TagValueQueryResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.ReadTagValuesAtTimes(string! adapterId, DataCore.Adapter.RealTimeData.ReadTagValuesAtTimesRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.TagValueQueryResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.UpdateAnnotation(string! adapterId, DataCore.Adapter.RealTimeData.UpdateAnnotationRequest! request) -> System.Threading.Tasks.Task<DataCore.Adapter.RealTimeData.WriteTagValueAnnotationResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.UpdateTag(string! adapterId, DataCore.Adapter.Tags.UpdateTagRequest! request) -> System.Threading.Tasks.Task<DataCore.Adapter.Tags.TagDefinition!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.WriteEventMessages(string! adapterId, DataCore.Adapter.Events.WriteEventMessagesRequest! request, System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Events.WriteEventMessageItem!>! channel, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Events.WriteEventMessageResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.WriteHistoricalTagValues(string! adapterId, DataCore.Adapter.RealTimeData.WriteTagValuesRequest! request, System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.WriteTagValueItem!>! channel, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.WriteTagValueResult!>!
DataCore.Adapter.AspNetCore.Hubs.AdapterHub.WriteSnapshotTagValues(string! adapterId, DataCore.Adapter.RealTimeData.WriteTagValuesRequest! request, System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.WriteTagValueItem!>! channel, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.RealTimeData.WriteTagValueResult!>!
DataCore.Adapter.AspNetCore.SignalRAdapterCallContext
DataCore.Adapter.AspNetCore.SignalRAdapterCallContext.ConnectionId.get -> string!
DataCore.Adapter.AspNetCore.SignalRAdapterCallContext.CorrelationId.get -> string!
DataCore.Adapter.AspNetCore.SignalRAdapterCallContext.CultureInfo.get -> System.Globalization.CultureInfo!
DataCore.Adapter.AspNetCore.SignalRAdapterCallContext.Items.get -> System.Collections.Generic.IDictionary<object!, object?>!
DataCore.Adapter.AspNetCore.SignalRAdapterCallContext.User.get -> System.Security.Claims.ClaimsPrincipal?
Microsoft.AspNetCore.Routing.AdapterSignalREndpointDataSourceExtensions
Microsoft.Extensions.DependencyInjection.SignalRConfigurationExtensions
override DataCore.Adapter.AspNetCore.Hubs.AdapterHub.OnDisconnectedAsync(System.Exception? exception) -> System.Threading.Tasks.Task!
static Microsoft.AspNetCore.Routing.AdapterSignalREndpointDataSourceExtensions.IsSignalRAdapterApiRegistered(this Microsoft.AspNetCore.Routing.EndpointDataSource! endpointDataSource) -> bool
static Microsoft.Extensions.DependencyInjection.SignalRConfigurationExtensions.AddDataCoreAdapterSignalR(this Microsoft.AspNetCore.SignalR.ISignalRServerBuilder! builder) -> Microsoft.AspNetCore.SignalR.ISignalRServerBuilder!
static Microsoft.Extensions.DependencyInjection.SignalRConfigurationExtensions.MapDataCoreAdapterHubs(this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder! endpoints) -> Microsoft.AspNetCore.Routing.IEndpointRouteBuilder!
static Microsoft.Extensions.DependencyInjection.SignalRConfigurationExtensions.MapDataCoreAdapterHubs(this Microsoft.AspNetCore.Routing.IEndpointRouteBuilder! endpoints, System.Action<System.Type!, Microsoft.AspNetCore.Builder.HubEndpointConventionBuilder!>? builder) -> Microsoft.AspNetCore.Routing.IEndpointRouteBuilder!
