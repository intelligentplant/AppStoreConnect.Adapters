<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdapterSubscription_AnonymousUserName" xml:space="preserve">
    <value>&lt;Anonymous&gt;</value>
  </data>
  <data name="Error_AdapterDescriptionIsTooLong" xml:space="preserve">
    <value>Maximum adapter description length is {0}.</value>
  </data>
  <data name="Error_AdapterIdIsTooLong" xml:space="preserve">
    <value>Maximum adapter ID length is {0}.</value>
  </data>
  <data name="Error_AdapterIsAlreadyStarted" xml:space="preserve">
    <value>An adapter cannot be started when it is already running.</value>
  </data>
  <data name="Error_AdapterIsDisabled" xml:space="preserve">
    <value>The adapter is disabled.</value>
  </data>
  <data name="Error_AdapterIsNotCompatibleWithHelperClass" xml:space="preserve">
    <value>Adapter '{0}' is not compatible with '{1}'.</value>
    <comment>{0} - adapter ID
{1} - helper class name</comment>
  </data>
  <data name="Error_AdapterIsNotStarted" xml:space="preserve">
    <value>The adapter has not been started.</value>
  </data>
  <data name="Error_AdapterIsStopping" xml:space="preserve">
    <value>The adapter is currently stopping and cannot be started until this operation completes.</value>
  </data>
  <data name="Error_AdapterNameIsTooLong" xml:space="preserve">
    <value>Maximum adapter name length is {0}.</value>
  </data>
  <data name="Error_BucketSizeMustBeGreaterThanZero" xml:space="preserve">
    <value>The bucket size for plot calculations must be greater than zero.</value>
  </data>
  <data name="Error_CannotResolveAnySubscriptionTopics" xml:space="preserve">
    <value>Unable to resolve any requested subscription topics.</value>
  </data>
  <data name="Error_FeatureIsAlreadyRegistered" xml:space="preserve">
    <value>This feature has already been registered.</value>
  </data>
  <data name="Error_FeatureUnavailable" xml:space="preserve">
    <value>Feature is unavailable.</value>
  </data>
  <data name="Error_InvalidBaseDate" xml:space="preserve">
    <value>Invalid base date: {0}</value>
    <comment>{0} - base date string</comment>
  </data>
  <data name="Error_InvalidExtensionFeatureOperationUri" xml:space="preserve">
    <value>The specified URI is not a valid extension feature operation URI.</value>
  </data>
  <data name="Error_NotAFeatureImplementation" xml:space="preserve">
    <value>Object does not implement feature '{0}'.</value>
    <comment>{0} - feature name</comment>
  </data>
  <data name="Error_NotAnAdapterFeature" xml:space="preserve">
    <value>'{0}' is not a valid adapter feature type. Standard features must be interfaces that extend '{1}' and are annotated with '{2}'. Non-standard features must be interfaces or classes that extend '{3}' and are annotated with '{4}'.</value>
    <comment>{0} - Invalid type name
{1} - IAdapterFeature name
{2} - AnnotationFeatureAttribute name
{3} - IAdapterExtensionFeature name
{4} - AdapterExtensionFeatureAttributeName
</comment>
  </data>
  <data name="Error_NotAnExtensionFeatureInterface" xml:space="preserve">
    <value>You must specify an extension feature interface type (i.e. an interface derived from {0} and annotated with {1}).</value>
    <comment>{0} - IAdapterExtensionFeature name
{1} - AdapterFeatureAttribute name</comment>
  </data>
  <data name="Error_TooManySubscriptions" xml:space="preserve">
    <value>Too many subscriptions.</value>
  </data>
  <data name="HealthChecks_CompositeResultDescription_Degraded" xml:space="preserve">
    <value>The adapter is running with degraded health status.</value>
  </data>
  <data name="HealthChecks_CompositeResultDescription_Error" xml:space="preserve">
    <value>Error while performing adapter health checks.</value>
  </data>
  <data name="HealthChecks_CompositeResultDescription_Healthy" xml:space="preserve">
    <value>The adapter is running with healthy status.</value>
  </data>
  <data name="HealthChecks_CompositeResultDescription_NotStarted" xml:space="preserve">
    <value>The adapter is not running.</value>
  </data>
  <data name="HealthChecks_CompositeResultDescription_Unhealthy" xml:space="preserve">
    <value>The adapter is running with unhealthy status.</value>
  </data>
  <data name="HealthChecks_Data_ActiveSubscriberCount" xml:space="preserve">
    <value>Active Subscriber Count</value>
  </data>
  <data name="HealthChecks_Data_ConnectionId" xml:space="preserve">
    <value>Connection ID</value>
  </data>
  <data name="HealthChecks_Data_CorrelationId" xml:space="preserve">
    <value>Correlation ID</value>
  </data>
  <data name="HealthChecks_Data_PassiveSubscriberCount" xml:space="preserve">
    <value>Passive Subscriber Count</value>
  </data>
  <data name="HealthChecks_Data_SubscriberCount" xml:space="preserve">
    <value>Subscriber Count</value>
  </data>
  <data name="HealthChecks_Data_TagCount" xml:space="preserve">
    <value>Tag Count</value>
  </data>
  <data name="HealthChecks_Data_TopicCount" xml:space="preserve">
    <value>Topic Count</value>
  </data>
  <data name="HealthChecks_Data_UserName" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="HealthChecks_Data_UtcLastEmit" xml:space="preserve">
    <value>Last Emit Time</value>
  </data>
  <data name="HealthChecks_DisplayName_FeatureHealth" xml:space="preserve">
    <value>Feature Health: {0}</value>
    <comment>{0} - feature name</comment>
  </data>
  <data name="HealthChecks_DisplayName_OverallAdapterHealth" xml:space="preserve">
    <value>Adapter Health</value>
  </data>
  <data name="Log_AdapterStartupError" xml:space="preserve">
    <value>An error occurred while starting adapter '{AdapterId}'.</value>
  </data>
  <data name="Log_AdapterStopError" xml:space="preserve">
    <value>An error occurred while stopping adapter '{AdapterId}'.</value>
  </data>
  <data name="Log_DisposingAdapter" xml:space="preserve">
    <value>Stopping adapter '{AdapterId}' (disposing: true).</value>
  </data>
  <data name="Log_ErrorDuringSnapshotPushRefresh" xml:space="preserve">
    <value>Error while refreshing subscribed snapshot tag values.</value>
  </data>
  <data name="Log_ErrorInBackgroundTask" xml:space="preserve">
    <value>Error in background task '{WorkItem}'.</value>
  </data>
  <data name="Log_ErrorInEventSubscriptionManagerPublishLoop" xml:space="preserve">
    <value>An error occurred in the event subscription manager publish loop.</value>
  </data>
  <data name="Log_ErrorInSnapshotPollingUpdateLoop" xml:space="preserve">
    <value>An error occurred while the snapshot subscription manager was polling for new values.</value>
  </data>
  <data name="Log_ErrorInSnapshotSubscriptionManagerPublishLoop" xml:space="preserve">
    <value>An error occurred in the snapshot subscription manager publish loop.</value>
  </data>
  <data name="Log_ErrorWhileDisposingOfEventMessageSubscription" xml:space="preserve">
    <value>An error occurred while disposing of an event message subscription.</value>
  </data>
  <data name="Log_ErrorWhileDisposingOfSnapshotSubscription" xml:space="preserve">
    <value>An error occurred while disposing of a snapshot subscription.</value>
  </data>
  <data name="Log_ErrorWhileProcessingSnapshotSubscriptionChange" xml:space="preserve">
    <value>An error occurred while processing a subscription change for {count} tags: Action = '{action}'</value>
  </data>
  <data name="Log_ErrorWhileProcessingSubscriptionTopicChange" xml:space="preserve">
    <value>An error occurred while processing a subscription change for {count} topics: Action = '{action}'</value>
  </data>
  <data name="Log_InMemoryEventMessageManager_EvictedMessage" xml:space="preserve">
    <value>Evicted event message '{id}' with cursor position '{cursorPosition}' and timestamp '{timestamp}'.</value>
  </data>
  <data name="Log_InMemoryEventMessageManager_WroteMessage" xml:space="preserve">
    <value>Wrote event message '{id}' with cursor position '{cursorPosition}' and timestamp '{timestamp}'.</value>
  </data>
  <data name="Log_InvalidAdapterOptionsUpdate" xml:space="preserve">
    <value>Updated adapter options are not valid.</value>
  </data>
  <data name="Log_PublishToSubscriberThrewException" xml:space="preserve">
    <value>Publish to subscriber with connection ID '{connectionId}' failed with error.</value>
  </data>
  <data name="Log_PublishToSubscriberWasUnsuccessful" xml:space="preserve">
    <value>Publish to subscriber with connection ID '{connectionId}' failed.</value>
  </data>
  <data name="Log_StartedAdapter" xml:space="preserve">
    <value>Started adapter '{AdapterId}'.</value>
  </data>
  <data name="Log_StartingAdapter" xml:space="preserve">
    <value>Starting adapter '{AdapterId}'.</value>
  </data>
  <data name="Log_StoppedAdapter" xml:space="preserve">
    <value>Stopped adapter '{AdapterId}'.</value>
  </data>
  <data name="Log_StoppingAdapter" xml:space="preserve">
    <value>Stopping adapter '{AdapterId}' (disposing: false).</value>
  </data>
  <data name="TagValue_ProcessedValue_Error" xml:space="preserve">
    <value>ERROR</value>
  </data>
  <data name="TagValue_ProcessedValue_NoData" xml:space="preserve">
    <value>No data available in the bucket.</value>
  </data>
  <data name="TagValue_ProcessedValue_NoGoodData" xml:space="preserve">
    <value>No good-quality data available in the bucket.</value>
  </data>
</root>