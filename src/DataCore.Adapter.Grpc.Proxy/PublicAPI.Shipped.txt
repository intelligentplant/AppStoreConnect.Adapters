#nullable enable
DataCore.Adapter.Grpc.Proxy.Extensions.AdapterExtensionFeatureImpl
DataCore.Adapter.Grpc.Proxy.Extensions.AdapterExtensionFeatureImpl.AdapterExtensionFeatureImpl(DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy! proxy) -> void
DataCore.Adapter.Grpc.Proxy.GetGrpcCallCredentials
DataCore.Adapter.Grpc.Proxy.GetGrpcClientInterceptors
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy.CreateClient<TClient>() -> TClient!
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy.GetCallCredentials(DataCore.Adapter.IAdapterCallContext! context) -> Grpc.Core.CallCredentials?
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy.RemoteDescriptor.get -> DataCore.Adapter.Common.AdapterDescriptorExtended!
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy.RemoteHostInfo.get -> DataCore.Adapter.Common.HostInfo!
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.CloseChannelOnDispose.get -> bool
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.CloseChannelOnDispose.set -> void
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.ExtensionFeatureFactory.get -> DataCore.Adapter.Proxy.ExtensionFeatureFactory<DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy!>?
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.ExtensionFeatureFactory.set -> void
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.GetCallCredentials.get -> DataCore.Adapter.Grpc.Proxy.GetGrpcCallCredentials?
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.GetCallCredentials.set -> void
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.GetClientInterceptors.get -> DataCore.Adapter.Grpc.Proxy.GetGrpcClientInterceptors?
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.GetClientInterceptors.set -> void
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.GrpcAdapterProxyOptions() -> void
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.HeartbeatInterval.get -> System.TimeSpan
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.HeartbeatInterval.set -> void
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.RemoteId.get -> string!
DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxyOptions.RemoteId.set -> void
DataCore.Adapter.Grpc.Proxy.ProxyAdapterFeature
DataCore.Adapter.Grpc.Proxy.ProxyAdapterFeature.AdapterId.get -> string!
DataCore.Adapter.Grpc.Proxy.ProxyAdapterFeature.BackgroundTaskService.get -> IntelligentPlant.BackgroundTasks.IBackgroundTaskService!
DataCore.Adapter.Grpc.Proxy.ProxyAdapterFeature.CreateClient<TClient>() -> TClient!
DataCore.Adapter.Grpc.Proxy.ProxyAdapterFeature.GetCallOptions(DataCore.Adapter.IAdapterCallContext! context, System.Threading.CancellationToken cancellationToken) -> Grpc.Core.CallOptions
DataCore.Adapter.Grpc.Proxy.ProxyAdapterFeature.Logger.get -> Microsoft.Extensions.Logging.ILogger!
DataCore.Adapter.Grpc.Proxy.ProxyAdapterFeature.Proxy.get -> DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy!
DataCore.Adapter.Grpc.Proxy.ProxyAdapterFeature.ProxyAdapterFeature(DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy! proxy) -> void
DataCore.Adapter.Grpc.Proxy.Resources
override DataCore.Adapter.Grpc.Proxy.Extensions.AdapterExtensionFeatureImpl.DuplexStreamInternal(DataCore.Adapter.IAdapterCallContext! context, DataCore.Adapter.Extensions.DuplexStreamInvocationRequest! request, System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Extensions.InvocationStreamItem!>! channel, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Extensions.InvocationResponse!>!
override DataCore.Adapter.Grpc.Proxy.Extensions.AdapterExtensionFeatureImpl.GetDescriptorFromRemoteAdapter(DataCore.Adapter.IAdapterCallContext! context, System.Uri? featureUri, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<DataCore.Adapter.Common.FeatureDescriptor?>!
override DataCore.Adapter.Grpc.Proxy.Extensions.AdapterExtensionFeatureImpl.GetOperationsFromRemoteAdapter(DataCore.Adapter.IAdapterCallContext! context, System.Uri? featureUri, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<DataCore.Adapter.Extensions.ExtensionFeatureOperationDescriptor!>!>!
override DataCore.Adapter.Grpc.Proxy.Extensions.AdapterExtensionFeatureImpl.InvokeInternal(DataCore.Adapter.IAdapterCallContext! context, DataCore.Adapter.Extensions.InvocationRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<DataCore.Adapter.Extensions.InvocationResponse!>!
override DataCore.Adapter.Grpc.Proxy.Extensions.AdapterExtensionFeatureImpl.StreamInternal(DataCore.Adapter.IAdapterCallContext! context, DataCore.Adapter.Extensions.InvocationRequest! request, System.Threading.CancellationToken cancellationToken) -> System.Collections.Generic.IAsyncEnumerable<DataCore.Adapter.Extensions.InvocationResponse!>!
override DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy.CheckHealthAsync(DataCore.Adapter.IAdapterCallContext! context, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<DataCore.Adapter.Diagnostics.HealthCheckResult>!>!
override DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy.Dispose(bool disposing) -> void
override DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy.DisposeAsyncCore() -> System.Threading.Tasks.ValueTask
override DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy.StartAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
override DataCore.Adapter.Grpc.Proxy.GrpcAdapterProxy.StopAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
~static DataCore.Adapter.Grpc.Proxy.Resources.AdapterMetadata_Description.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.AdapterMetadata_DisplayName.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.Culture.get -> System.Globalization.CultureInfo
~static DataCore.Adapter.Grpc.Proxy.Resources.Culture.set -> void
~static DataCore.Adapter.Grpc.Proxy.Resources.Error_AdapterIdIsRequired.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.HealthCheck_ChannelStateDescription.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.HealthCheck_ChannelStateDescriptionNoInnerResults.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.HealthCheck_DisplayName_Connection.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.HealthCheck_DisplayName_RemoteAdapter.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.HealthCheck_GrpcNetClientDescription.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.HealthCheck_RemoteAdapterHealthNotSupported.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.Log_ChannelShutdownError.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.Log_ErrorDuringHeartbeatInvocation.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.Log_ExtensionFeatureRegistrationError.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.Log_NoExtensionImplementationAvailable.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.Log_SubscriptionDisposeError.get -> string
~static DataCore.Adapter.Grpc.Proxy.Resources.ResourceManager.get -> System.Resources.ResourceManager
