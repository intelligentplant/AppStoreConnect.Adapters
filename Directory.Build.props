<Project>
  
  <!-- Recursively import the Directory.Build.props file from the parent folder if it exists. -->
   <PropertyGroup>
    <ParentProject>$([MSBuild]::GetPathOfFileAbove('$(MSBuildThisFile)', '$(MSBuildThisFileDirectory)../'))</ParentProject>
  </PropertyGroup>
  <Import Project="$(ParentProject)" Condition=" '$(ParentProject)' != '' " />
  
  <!-- Common build properties -->
  <PropertyGroup>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <Authors>Intelligent Plant</Authors>
    <Company>Intelligent Plant Ltd.</Company>
    <PackagePrefix>IntelligentPlant.AppStoreConnect</PackagePrefix>
    <PackageProjectUrl>https://github.com/intelligentplant/AppStoreConnect.Adapters</PackageProjectUrl>
    <PackageOutputPath>$(MSBuildThisFileDirectory)artifacts\packages\$(Configuration)</PackageOutputPath>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <NeutralLanguage>en</NeutralLanguage>
    <CopyrightStartYear>2019</CopyrightStartYear>
  </PropertyGroup>

  <PropertyGroup>
    <!-- 
    IMPORTANT: 
    This version will always be overridden by the version specified in build\version.json when 
    building via build.ps1 or build.sh. It is defined here to allow Visual Studio to build with 
    the solution with the correct version number.
    -->
    <Version>4.1.2</Version>
  </PropertyGroup>

  <Choose>
    <When Condition=" $([System.DateTime]::UtcNow.Year) > $(CopyrightStartYear) ">
      <PropertyGroup>
        <Copyright>Copyright © $(CopyrightStartYear)-$([System.DateTime]::UtcNow.Year) $(Company)</Copyright>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <Copyright>Copyright © $(CopyrightStartYear) $(Company)</Copyright>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- In a CI build, make sure we've not left any compiled warnings unhandled. -->
  <PropertyGroup Condition=" '$(ContinuousIntegrationBuild)' == 'true' ">
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <!-- Extension point to allow Continuous Integration systems to inject their own configuration. -->
  <Import Project="CI.props" Condition="Exists('CI.props')" />

</Project>