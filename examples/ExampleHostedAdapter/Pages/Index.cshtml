@page
@model ExampleHostedAdapter.Pages.IndexModel
@{
  ViewData["Title"] = "Home";
}

@Html.HiddenFor(x => x.Adapter.Descriptor.Id)

<div id="adapter-status">
  @await Html.PartialAsync("_AdapterStatusPartial")
</div>

<div class="toast-container position-fixed top-0 end-0 p-3">
  <div id="adapter-id-copied-notification" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body">
        Adapter ID copied to clipboard
      </div>
      <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
</div>

@section Scripts {
  <script defer>
    $(() => {
        let updateInProgress = false;

        const setLastUpdatedTime = () => $('#last-updated').text('Last Updated: ' + new Date().toLocaleString());
        
        const updateStatus = async () => {
            if (updateInProgress) {
                return;
            }

            updateInProgress = true;
            try {
                const response = await $.get('@Url.Page("Index", "Status")');
                $('#adapter-status').html(response);
                setLastUpdatedTime();
            }
            finally {
                updateInProgress = false;
            }
        };

        setLastUpdatedTime();
        
        setInterval(async () => { 
            await updateStatus();
        }, 15000);

        document.addEventListener('click', async (evt) => {
            if (!event.composedPath().some(x => x.matches('.copy-adapter-id'))) {
                return;
            }
            await navigator.clipboard.writeText($('#@Html.IdFor(x => x.Adapter.Descriptor.Id)').val());

            const toast = new bootstrap.Toast($('#adapter-id-copied-notification')[0]);
            toast.show();
        });
    });
  </script>
}