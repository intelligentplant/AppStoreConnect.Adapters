@using DataCore.Adapter;
@model Example.Adapter.Host.Pages.IndexModel

@{
  string cardColourModifier;
  string statusIcon;
  string statusText;

  switch (Model.State) {
    case Example.Adapter.Host.Pages.IndexModel.AdapterState.Disabled:
      cardColourModifier = "danger";
      statusIcon = "fa-circle-stop";
      statusText = "Disabled";
      break;
    case Example.Adapter.Host.Pages.IndexModel.AdapterState.Enabled:
      cardColourModifier = "warning";
      statusIcon = "fa-circle-half-stroke";
      statusText = "Enabled";
      break;
    case Example.Adapter.Host.Pages.IndexModel.AdapterState.Running:
      cardColourModifier = "success";
      statusIcon = "fa-circle-play";
      statusText = "Running";
      break;
    case Example.Adapter.Host.Pages.IndexModel.AdapterState.RunningWithWarning:
      cardColourModifier = "warning";
      statusIcon = "fa-circle-exclamation";
      statusText = "Running (Unhealthy)";
      break;
    default:
      cardColourModifier = "light";
      statusIcon = "fa-circle-question";
      statusText = "Unknown Status";
      break;
  }

  string GetFeatureIcon(DataCore.Adapter.Common.FeatureDescriptor descriptor) {
    if (descriptor.Uri.IsChildOf(WellKnownFeatures.AssetModel.BaseUri)) {
      return "fa-sitemap";
    }
    if (descriptor.Uri.IsChildOf(WellKnownFeatures.Diagnostics.BaseUri)) {
      return "fa-heart-pulse";
    }
    if (descriptor.Uri.IsChildOf(WellKnownFeatures.Events.BaseUri)) {
      return "fa-message";
    }
    if (descriptor.Uri.IsChildOf(WellKnownFeatures.RealTimeData.BaseUri)) {
      return "fa-chart-line";
    }
    if (descriptor.Uri.IsChildOf(WellKnownFeatures.Tags.BaseUri)) {
      return "fa-tags";
    }

    return "fa-microchip";
  }

  string GetFeatureCategory(DataCore.Adapter.Common.FeatureDescriptor descriptor) {
    return string.IsNullOrWhiteSpace(descriptor?.Category)
      ? "Uncategorised"
      : descriptor.Category;
  }
}

<div class="w-100">
  <div class="card border-@cardColourModifier">
    <div class="card-header text-bg-@cardColourModifier">
      <i class="fa-solid fa-puzzle-piece fa-fw"></i>
      Adapter Status: @statusText
    </div>
    <div class="card-body">

      <div class="row">
        <div class="col-12 col-lg-2">
          <div class="pb-1">
            <span class="adapter-status-heading">
              <i class="fa-solid fa-network-wired fa-fw"></i>
              Host Instance ID
              <i class="adapter-status-heading-info small fa-solid fa-info-circle fa-fw" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="The instance ID of the adapter host. This is used to uniquely identify this adapter host in distributed tracing systems."></i>
            </span>
          </div>
        </div>
        <div class="col">
          <div class="pb-3">
            @Model.GetHostId()
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-12 col-lg-2">
          <div class="pb-1">
            <span class="adapter-status-heading">
              <i class="fa-solid fa-fingerprint fa-fw"></i>
              Adapter ID
              <i class="adapter-status-heading-info small fa-solid fa-info-circle fa-fw" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="The identifier for the adapter. Use this value when configuring the App Store Connect connection to your adapter."></i>
            </span>
          </div>
        </div>
        <div class="col">
          <div class="pb-3">
            <code>@Model.Adapter.Descriptor.Id</code>
            <button type="button" class="btn btn-sm copy-adapter-id" style="padding:0.15rem; border:none;" title="Copy adapter ID to clipboard">
              <i class="fa-solid fa-copy fa-fw"></i>
            </button>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-12 col-lg-2">
          <div class="pb-1">
            <span class="adapter-status-heading">
              <i class="fa-solid fa-id-badge fa-fw"></i>
              Name
              <i class="adapter-status-heading-info small fa-solid fa-info-circle fa-fw" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="The display name for the adapter."></i>
            </span>
          </div>
        </div>
        <div class="col">
          <div class="pb-3">@Model.Adapter.Descriptor.Name</div>
        </div>
      </div>

      <div class="row">
        <div class="col-12 col-lg-2">
          <div class="pb-1">
            <span class="adapter-status-heading">
              <i class="fa-solid fa-circle-info fa-fw"></i>
              Description
              <i class="adapter-status-heading-info small fa-solid fa-info-circle fa-fw" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="The adapter description."></i>
            </span>
          </div>
        </div>
        <div class="col">
          <div class="pb-3">@Model.Adapter.Descriptor.Description</div>
        </div>
      </div>

      <div class="row">
        <div class="col-12 col-lg-2">
          <div class="pb-1">
            <span class="adapter-status-heading">
              <i class="fa-solid fa-code fa-fw"></i>
              Driver
              <i class="adapter-status-heading-info small fa-solid fa-info-circle fa-fw" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="Information about the adapter driver and vendor."></i>
            </span>
          </div>
        </div>
        <div class="col">
          <div class="pb-3">
            @($"{Model.Adapter.TypeDescriptor.Name} v{Model.Adapter.TypeDescriptor.Version}")
            @if (Model.Adapter.TypeDescriptor.Vendor != null) {
              if (Model.Adapter.TypeDescriptor.Vendor.Url != null) {
                <span>by <a href="@Model.Adapter.TypeDescriptor.Vendor.Url" target="_blank" title="Visit @Model.Adapter.TypeDescriptor.Vendor.Name">@Model.Adapter.TypeDescriptor.Vendor.Name</a></span>
              }
              else {
                <span>by @Model.Adapter.TypeDescriptor.Vendor.Name</span>
              }
            }
          </div>
        </div>
      </div>

      @if (Model.Adapter.IsEnabled) {
        if (Model.Adapter.Features.Keys.Any()) {
          <div class="row">
            <div class="col-12 col-lg-2 d-none d-lg-block">
              <div class="pb-1">
                <span class="adapter-status-heading">
                  <i class="fa-solid fa-microchip fa-fw"></i>
                  Features
                  <i class="adapter-status-heading-info small fa-solid fa-info-circle fa-fw" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="The features that the adapter supports."></i>
                </span>
              </div>
            </div>
            <div class="col">
              <div class="pb-1">
                @foreach (var featureGroup in Model.Adapter.Features.Keys.Select(x => WellKnownFeatures.TryGetFeatureDescriptor(x, out var descriptor) ? descriptor : Model.Adapter.Features[x]!.GetType().CreateFeatureDescriptor()).OrderBy(x => GetFeatureCategory(x!), Example.Adapter.Host.FeatureCategoryComparer.Instance).ThenBy(x => x!.DisplayName, StringComparer.OrdinalIgnoreCase).ToLookup(x => GetFeatureCategory(x!), StringComparer.OrdinalIgnoreCase)) {
                  <div class="pb-2 adapter-status-heading">
                    <i class="fa-solid @GetFeatureIcon(featureGroup.First()!) fa-fw" title="Adapter features: @featureGroup.Key"></i>
                    <span class="d-lg-none">Features: </span>
                    @featureGroup.Key
                  </div>
                  <div class="row row-cols-1 row-cols-lg-2">
                    @foreach (var feature in featureGroup) {
                      <div class="col pb-2">
                        <div class="card w-100 h-100 small">
                          <div class="card-body p-2">
                            <p class="card-title adapter-status-heading">
                              @feature!.DisplayName
                            </p>
                            <p class="card-subtitle">
                              <code>@feature!.Uri</code>
                            </p>
                            @if (!string.IsNullOrWhiteSpace(feature?.Description)) {
                              <p class="card-text text-secondary-emphasis">
                                @feature.Description
                              </p>
                            }
                          </div>
                        </div>
                      </div>
                    }
                  </div>
                }
              </div>
            </div>
          </div>
        }

        <div class="row">
          <div class="col-12 col-lg-2">
            <div class="pb-1">
              <span class="adapter-status-heading">
                <i class="fa-solid fa-circle-nodes fa-fw"></i>
                Enabled APIs
                <i class="adapter-status-heading-info small fa-solid fa-info-circle fa-fw" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="The APIs that can be used to query the adapter."></i>
              </span>
            </div>
          </div>
          <div class="col">
            <div class="pb-3">
              @if (Model.ApiIsEnabled) {
                foreach (var api in Model.AvailableApis.Where(x => x.Enabled)) {
                  if (string.IsNullOrWhiteSpace(api.Provider)){
                    <div>@api.Name</div>
                  }
                  else {
                    <div>@api.Name <span class="small text-secondary-emphasis">(provider: @(string.IsNullOrWhiteSpace(api.Version) ? api.Provider : $"{api.Provider} v{api.Version}"))</span></div>
                  }
                }
              }
              else {
                <div>
                  <i class="fa-solid fa-exclamation fa-fw"></i>
                  <em>No APIs are enabled</em>
                </div>
              }
            </div>
          </div>
        </div>
      }

    </div>

    <div class="card-footer">
      <div class="small text-secondary-emphasis">
        <div class="d-flex justify-content-between">
          <div>
            <i class="fa-solid @statusIcon fa-fw"></i>
            <span>@statusText</span>
          </div>
          <div id="last-updated"></div>
        </div>
      </div>
    </div>
  </div>
</div>
